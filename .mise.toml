[tools]
"go:github.com/coreos/butane/internal" = "v0.20.0"
kustomize = "5.4.1"
k0sctl = "0.17.7"
"cargo:coreos-installer" = "latest"
pre-commit = "latest"
kubectl = "latest"

[env]
CONTAINER_ENGINE="docker"
CACHE_DIR="{{ [config_root, '.cache'] | join_path }}"
DATA_DIR="{{ [env.CACHE_DIR, 'data'] | join_path }}"
PKI_DIR="{{ [env.CACHE_DIR, 'pki'] | join_path }}"
K0SCTL_USERNAME="admin"
K0SCTL_IDENTITY_PATH="{{ [config_root, '.ssh', 'id_rsa'] | join_path }}"
K0SCTL_BASE_CONFIG_PATH="{{ [config_root, 'k0s', 'k0s.Cluster.yaml'] | join_path }}"
K0SCTL_CONFIG_OUTPUT="{{ [env.CACHE_DIR, 'k0sctl', 'config.yaml'] | join_path }}"
K0SCTL_KUBECONFIG="{{ [env.CACHE_DIR, '.kube', 'config'] | join_path }}"
K0SCTL_HOSTS=""
KUBECONFIG="{{ env.K0SCTL_KUBECONFIG }}"
K0S_BUTANE_PATH="{{ [config_root, 'ignition', 'k0s.bu'] | join_path }}"
K0S_IGNITION_PATH="{{ [env.CACHE_DIR, 'ignition', 'k0s.ign'] | join_path }}"
COREOS_DEST_DEV="/dev/sda"
COREOS_ISO_PATH=""
COREOS_ISO_OUTPUT="out.iso"
COREOS_VERSION="40.20240416.3.1"
TARGET_SYSTEM_ARCH="x86_64"
COREOS_DOWNLOAD_URL="https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/{{ env.COREOS_VERSION }}/{{ env.TARGET_SYSTEM_ARCH }}"
COREOS_KERNEL_URL="{{ env.COREOS_DOWNLOAD_URL }}/fedora-coreos-{{ env.COREOS_VERSION }}-live-kernel-{{ env.TARGET_SYSTEM_ARCH }}"
COREOS_INITRAMFS_URL="{{ env.COREOS_DOWNLOAD_URL }}/fedora-coreos-{{ env.COREOS_VERSION }}-live-initramfs.{{ env.TARGET_SYSTEM_ARCH }}.img"
COREOS_ROOTFS_URL="{{ env.COREOS_DOWNLOAD_URL }}/fedora-coreos-{{ env.COREOS_VERSION }}-live-rootfs.{{ env.TARGET_SYSTEM_ARCH }}.img"
PXE_ROOT_DIR="{{ [env.DATA_DIR, 'os'] | join_path }}"
PXE_COREOS_DIR="{{ [env.PXE_ROOT_DIR, 'fedora', 'coreos', env.COREOS_VERSION, env.TARGET_SYSTEM_ARCH] | join_path }}"
K0S_KERNEL_OUTPUT="{{ [env.PXE_COREOS_DIR, 'k0s-live-kernel'] | join_path }}"
K0S_INITRAMFS_OUTPUT="{{ [env.PXE_COREOS_DIR, 'k0s-live-initramfs.img'] | join_path }}"
K0S_ROOTFS_OUTPUT="{{ [env.PXE_COREOS_DIR, 'k0s-live-rootfs.img'] | join_path }}"
PXE_IGNITION_PATH="{{ [env.CACHE_DIR, 'ignition', 'pxe.ign'] | join_path }}"
PXE_BUTANE_PATH="{{ [config_root, 'ignition', 'pxe.bu'] | join_path }}"

[tasks."k0s:trust-ca"]
run = """
    #! /usr/bin/env bash
    mkdir -p ${PKI_DIR}

    kubectl get secret ca-root -n cert-manager -o jsonpath='{ .data.ca\\.crt }' | base64 -d > "${PKI_DIR}/k0s-root-ca.pem"
    sudo cp "${PKI_DIR}/k0s-root-ca.pem" /usr/share/pki/ca-trust-source/anchors
    sudo update-ca-trust
"""

[tasks."k0s:apply"]
run = "k0sctl apply -c ${K0SCTL_CONFIG_OUTPUT}"
depends = ["generate:config"]

[tasks."k0s:reset"]
run = "k0sctl reset --force -c ${K0SCTL_CONFIG_OUTPUT}"
depends = ["generate:config"]

[tasks."k0s:config"]
run = """
    #! /usr/bin/env bash
    mkdir -p $(dirname ${K0SCTL_KUBECONFIG})
    k0sctl kubeconfig -c ${K0SCTL_CONFIG_OUTPUT} > ${K0SCTL_KUBECONFIG}
    """

[tasks."flux:apply"]
run = "kubectl apply -k flux"

[tasks."generate:config"]
run = """
    #! /usr/bin/env bash
    mkdir -p $(dirname ${K0SCTL_CONFIG_OUTPUT})
    kustomize build k0s > ${K0SCTL_CONFIG_OUTPUT}
    """
depends = ["generate:k0s"]

[tasks."generate:k0s"]
run = """
    k0sctl init --k0s \
        --user ${K0SCTL_USERNAME} \
        -i ${K0SCTL_IDENTITY_PATH} \
        ${K0SCTL_HOSTS} > ${K0SCTL_BASE_CONFIG_PATH}
    """

[tasks."apply:pxe"]
run="scp -i ${K0SCTL_IDENTITY_PATH} -Cr ${PXE_ROOT_DIR} ${K0SCTL_USERNAME}@pxe:/srv/www"
depends = [ "k0s:generate:pxe" ]

[tasks."k0s:generate:pxe"]
run = """
    #!/usr/bin/env bash

    curl -o ${K0S_KERNEL_OUTPUT} ${COREOS_KERNEL_URL}
    curl -o ${K0S_ROOTFS_OUTPUT} ${COREOS_ROOTFS_URL}

    if [ -f ${K0S_INITRAMFS_OUTPUT} ]; then
        rm ${K0S_INITRAMFS_OUTPUT}
    fi

    curl -o temp.initramfs ${COREOS_INITRAMFS_URL}
    mkdir -p ${PXE_COREOS_DIR}
    coreos-installer pxe customize \
        --dest-device ${COREOS_DEST_DEV} \
        --dest-ignition ${K0S_IGNITION_PATH} \
        --dest-console ttyS0,115200n8 \
        --dest-console tty0 \
        -o ${K0S_INITRAMFS_OUTPUT} temp.initramfs

    chmod 0644 ${K0S_INITRAMFS_OUTPUT}

    tar -C $(dirname ${PXE_ROOT_DIR}) -czf ${PXE_ROOT_DIR}.tar.gz $(basename ${PXE_ROOT_DIR})

    rm temp.initramfs
    """
depends = ["k0s:generate:ignition"]

[tasks."pxe:arm:install"]
run = """
    ${CONTAINER_ENGINE} build -q -t arm-installer -f - "${root}" << EOF
        FROM quay.io/coreos/coreos-installer

        RUN dnf install -y cpio rsync jq

        COPY ./scripts/arm_installer_entrypoint.sh entrypoint.sh
        COPY ./.cache/ignition/pxe.ign config.ign

        ENV RELEASE=40
        ENV STREAM=stable
        ENV DEVICE=/dev/sda

        ENTRYPOINT ["./entrypoint.sh"]
EOF

    ${CONTAINER_ENGINE} run --rm /dev/sda arm-installer
"""
depends = ["k0s:generate:ignition"]

[tasks."k0s:generate:iso"]
run = """
    coreos-installer iso customize \
        --dest-device ${COREOS_DEST_DEV} \
        --dest-ignition ${K0S_IGNITION_PATH} \
        --dest-console ttyS0,115200n8 \
        --dest-console tty0 \
        -o ${COREOS_ISO_OUTPUT} ${COREOS_ISO_PATH}
    """
depends = ["k0s:generate:ignition"]

[tasks."k0s:generate:ignition"]
run = """
    #! /usr/bin/env bash
    mkdir -p $(dirname ${K0S_IGNITION_PATH})
    internal \
    --pretty --strict \
    --files-dir ${DATA_DIR} \
    < ${K0S_BUTANE_PATH} \
    > ${K0S_IGNITION_PATH}
    """
depends = ["common:pre-gen:ignition"]

[tasks."pxe:generate:ignition"]
run = """
    #! /usr/bin/env bash
    mkdir -p $(dirname ${PXE_IGNITION_PATH})
    internal \
    --pretty --strict \
    --files-dir ${DATA_DIR} \
    < ${PXE_BUTANE_PATH} \
    > ${PXE_IGNITION_PATH}
    """
depends = ["common:pre-gen:ignition"]

[tasks."common:pre-gen:ignition"]
run = """
    mkdir -p ${DATA_DIR}
    cp ${K0SCTL_IDENTITY_PATH}.pub ${DATA_DIR}/labadm.pub
    cp -R overlays/ ${DATA_DIR}

    ${CONTAINER_ENGINE} build -q -t ipxe -f - "${root}" << EOF
        FROM registry.fedoraproject.org/fedora
        RUN dnf install -y ipxe-bootimgs-x86 ipxe-bootimgs-aarch64
        VOLUME /out
        CMD ["sh", "-c", "cp /usr/share/ipxe/{undionly.kpxe,ipxe-x86_64.efi,ipxe-i386.efi} /out"]
EOF
    ${CONTAINER_ENGINE} run --rm -v ${DATA_DIR}/overlays/pxe/var/lib/tftpboot:/out:z localhost/ipxe
"""
